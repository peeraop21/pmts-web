@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model PMTs.DataAccess.ModelView.MaintenanceFluteTrim.MaintenanceFluteTrimModel

<div class="modal" id="modal_ViewMachineFluteTrim">
    <div class="modal-dialog modal-lg" style="width: 90%">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Localizer["Maintain Flute Trim"]</h4>
            </div>
            <div class="modal-body">

                <div class="row mb-2">
                    <input type="number" id="idParam" hidden/>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" style="width:100%;justify-content: left;" for="idMachine">@Localizer["Machine"] <i style="color:red"> *</i></label>
                            <select class="form-control" id="idMachine" style="width:100%;text-align: center;">
                                <option value="" selected>-- Please select machine --</option> 
                                @{
                                    if (Model != null && Model.MachineOptions != null)
                                    {
                                        foreach (var item in Model.MachineOptions)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    }
                                }
                            </select>
                            <span id="idMachine-error" class="text-danger" style="display: none;">@Localizer["The Machine field is required."]</span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" style="width:100%;justify-content: left;" for="idFlute">@Localizer["Flute"] <i style="color:red"> *</i></label>
                            <select class="form-control" id="idFlute" style="width:100%;text-align: center;">
                                <option value="" selected>-- Please select flute --</option>
                                @{
                                    if (Model != null && Model.FluteOptions != null)
                                    {
                                        foreach (var item in Model.FluteOptions)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    }
                                }
                            </select>
                            <span id="idFlute-error" class="text-danger" style="display: none;">@Localizer["The Flute field is required."]</span>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="form-label" style="width:100%;justify-content: left;" for="idTrim">@Localizer["Trim"] <i style="color:red"> *</i></label>
                            <input type="number" id="idTrim" class="form-control" />
                            <span id="idTrim-error" class="text-danger" style="display: none;">@Localizer["The Trim field is required."]</span>
                        </div>
                    </div>
                   

              
                </div>

                <div class="modal-footer">
                    <button type="button" id="idaddmodal" onclick="handleOnClickBtnAdd()" class="btn btn-primary">@Localizer["Save"]</button>
                    <button type="button" id="idupdatemodal" onclick="handleOnClickBtnUpdate()" class="btn btn-primary">@Localizer["Update"]</button>
                    <button type="button" id="idcancelmodal" onclick="handleOnClickBtnCancel()" class="btn btn-warning">@Localizer["Cancel"]</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function handleOnClickBtnCancel(){
        $('#modal_ViewMachineFluteTrim').modal("hide");
    }
    function isError(){
        var errorList = []
        if (!$("#idMachine").val()) {
            $('#idMachine-error').css('display', 'block');
            errorList.push(true)
        } else {
            $('#idMachine-error').css('display', 'none');
            errorList.push(false)
        }
        if (!$("#idFlute").val()) {
            $('#idFlute-error').css('display', 'block');
            errorList.push(true)
        } else {
            $('#idFlute-error').css('display', 'none');
            errorList.push(false)
        }
        if (!$("#idTrim").val()) {
            $('#idTrim-error').css('display', 'block');
            errorList.push(true)
        }else{
            $('#idTrim-error').css('display', 'none');
            errorList.push(false)
        }
        const result = errorList.findIndex(w => w == true)

        return result < 0 ? false : true
    }
    function handleOnClickBtnUpdate() {
        const result = isError()
        if (result == false) {
            subUpdateData();
        }
    }
    function handleOnClickBtnAdd() {
        const result = isError()
        if (result == false) { 
            $.ajax({
                url: '@Url.Action("CheckDuplicateMachineFluteTrim", "MaintenanceFluteTrim")',
                type: "POST",
                async: false,
                dataType: "json",
                data: { machine: $('#idMachine').val(), flute: $('#idFlute').val() },
                success: function (data) {
                    if (data.dup === "0") {
                        subAddData();
                    }
                    else {
                        swal("Machine Flute is duplicated", "", "warning");
                    }

                }
            });
        } 
    }
   
  
</script>

