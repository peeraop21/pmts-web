@model PMTs.DataAccess.ModelView.AddTagCustomer.MaintainAddTagCustomerModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

<div class="row">
    <div class="col-12">

        <div class="card card-top-bar">
            <div class="card-header">
                <div class="row box">
                    <div class="col-md-6">
                        <h3 class="text-themecolor"><i class="mdi mdi-tag-multiple"></i> @Localizer["AddTagCustomer"] </h3>
                    </div>
                </div>
            </div>

                <div class="card-body tab-criteria">
                    <div class="row">
                        <div class="col-md-6">
                        </div>
                        <div class="col-md-6">
                            <form>
                                <div class="row line-space" style=" margin-bottom:15px;margin-right:15px;">
                                    <div class="input-group">
                                        <select class="form-control custom-select col-md-4 text-sm-left" name="ddlSearch">
                                            <option value="Material_No">Material No</option>
                                            <option value="Description">Description</option>
                                            <option value="PC">PC</option>
                                            <option value="Board">Board</option>
                                            <option value="Box_Type">Box Type</option>
                                            <option value="Cust_Name">Customer name</option>
                                            <option value="MatSaleOrg">MatSaleOrg</option>
                                        </select>

                                        <input class="form-control text-left" id="inputMaterialNo" name="inputSerach" style="font-weight:bolder;" type="text" />  @*onchange="CheckMaterialNO(this)"*@
                                        <span class="input-group-btn" style="width:0px;"></span>

                                        <div class="input-group-append">
                                            <button asp-action="index" class="btn btn-info"><i class="fa fa-search"></i>@Localizer["Search"]</button>
                                        </div>
                                    </div>
                                    <!--<div class="form-group col-md-2"></div>
        <div class="form-group col-md-3" style="padding: 0px;text-align: right;">
            <label class=" vertical-sub-text  ml-5 mt-1">@Localizer["Material No"] : </label>
        </div>
        <div class="form-group col-md-2">
            <input class="form-control text-left" id="inputMaterialNo" name="inputMaterialNo" style="font-weight:bolder;" type="text" />-->
                                    @*onchange="CheckMaterialNO(this)"*@
                                    <!--</div>

        <div class="form-group col-md-2" style="padding: 0px;">-->
                                    @*<button type="button" class="btn btn-info" style="max-height:30px;min-width:100px;float: left;" onclick="SearchMasterData('')">@Localizer["Search"]</button>*@
                                    <!--<button asp-action="index" class="btn btn-info"><i class="fa fa-search"></i>@Localizer["Search"]</button>
        </div>-->
                                </div>
                            </form>
                        </div>

                        <div class="table-responsive m-t-10" style="padding:10px 10px 10px 10px;">
                            <table id="AddTag-data-table" class="table table-bordered color-table  m-t-10">
                                <thead>
                                    <tr class="color-table" style="background-color:lightgray">

                                        <th>MaterialNo</th>
                                        <th>PC</th>
                                        <th>SaleOrg</th>
                                        <th>Plant</th>
                                        <th>CustCode</th>
                                        <th>CustID</th>
                                        <th>CustName</th>
                                        <th>Description</th>
                                        <th>Edit</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @{ int No = 1; }
                                    @foreach (var item in Model.AddTagCustomerModel)
                                    {
                                        <tr>

                                            <td>@item.MaterialNo</td>
                                            <td>@item.PC</td>
                                            <td>@item.SaleOrg</td>
                                            <td>@item.Plant</td>
                                            <td>@item.CustCode</td>
                                            <td>@item.CustID</td>
                                            <td>@item.CustName</td>
                                            <td>@item.Description</td>
                                            <td>
                                                <button type="button" class="btn btn-default"
                                                        data-MaterialNo='@item.MaterialNo'
                                                        data-SaleOrg='@item.SaleOrg'
                                                        data-FactoryCode ='@item.FactoryCode'
                                                        data-PC='@item.PC'
                                                        data-CustCode='@item.CustCode'
                                                        data-CustID='@item.CustID'
                                                        data-CustName='@item.CustName'
                                                        data-Description='@item.Description'
                                                        data-SaleText1='@item.SaleText1'
                                                        data-SaleText2='@item.SaleText2'
                                                        data-SaleText3='@item.SaleText3'
                                                        data-SaleText4='@item.SaleText4'
                                                        data-Flute='@item.Flute'
                                                        data-Board='@item.Board'
                                                        data-TagBundle='@item.TagBundle'
                                                        data-TagPallet='@item.TagPallet'
                                                        data-NoTagBundle='@item.NoTagBundle'
                                                        data-HeadTagBundle='@item.HeadTagBundle'
                                                        data-FootTagBundle='@item.FootTagBundle'
                                                        data-HeadTagPallet='@item.HeadTagPallet'
                                                        data-FootTagPallet='@item.FootTagPallet'
                                                        onclick="BindingAddTagEdit(this)">

                                                    <span class="fas fa-pencil-alt text-warning" aria-hidden="true"></span>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                </tfoot>
                            </table>

                            <div class="modal" id="modal-AddTag-edit">
                                <div class="modal-dialog modal-lg" style="width: 90%">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h4 class="modal-title">@Localizer["Edit Tag Customer"]</h4>
                                            <button type="button" class="close" data-dismiss="modal" data-backdrop="false" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>

                                        @*<form id="fromCustomer" asp-controller="AddTagCustomer" asp-action="SaveAddTag" data-ajax="true" data-ajax-method="post" data-ajax-success="OnSaveSuccess">*@

                                            <form id="fromCustomer">
                                                <div class="modal-body">
                                                    <div class="row">
                                                        <div class="form-group col-md-2 setLeft">
                                                            <label class="control-label">@Localizer["Material No"]</label>
                                                        </div>
                                                        <div class="form-group col-md-3">
                                                            <input type="text" class="form-control" id="MaterialNo-edit" name="MaterialNo" readonly />
                                                            <input type="hidden" class="form-control" id="FactoryCode-edit" name="FactoryCode" readonly />
                                                        </div>
                                                        <div class="form-group col-md-2 setLeft">
                                                            <label class="control-label">@Localizer["PC"]</label>
                                                        </div>
                                                        <div class="form-group col-md-5">
                                                            <input type="text" class="form-control" id="PC-edit" name="PC" readonly />
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="form-group col-md-2 setLeft">
                                                            <label class="control-label">@Localizer["Saletext"]</label>
                                                        </div>
                                                        <div class="form-group col-md-10">
                                                            <input type="text" class="form-control" id="Saletext-edit" name="Saletext" readonly />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group col-md-2 setLeft">
                                                            <label class="control-label">@Localizer["Description"]</label>
                                                        </div>
                                                        <div class="form-group col-md-10">
                                                            <input type="text" class="form-control" id="Description-edit" name="Description" readonly />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="form-group col-md-2 setLeft">
                                                            <label class="control-label">@Localizer["Cust Code"]</label>
                                                        </div>
                                                        <div class="form-group col-md-3">
                                                            <input type="text" class="form-control" id="CustCode-edit" name="CustCode" readonly />
                                                        </div>
                                                        <div class="form-group col-md-2 setLeft">
                                                            <label class="control-label">@Localizer["Cust Name"]</label>
                                                        </div>
                                                        <div class="form-group col-md-5">
                                                            <input type="text" class="form-control" id="CustName-edit" name="CustName" readonly />
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="form-group col-md-2 setLeft">
                                                            <label class="control-label">@Localizer["Flute"]</label>
                                                        </div>
                                                        <div class="form-group col-md-3">
                                                            <input type="text" class="form-control" id="Flute-edit" name="Flute" readonly />
                                                        </div>
                                                        <div class="form-group col-md-2 setLeft">
                                                            <label class="control-label">@Localizer["Board"]</label>
                                                        </div>
                                                        <div class="form-group col-md-5">
                                                            <input type="text" class="form-control" id="Board-edit" name="Board" readonly />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                    </div>

                                                    <div class="row">
                                                        <input type="hidden" id="TagBundle" />
                                                        <input type="hidden" id="NoTagBundle" />
                                                        <input type="hidden" id="TagPallet" />
                                                        <input type="hidden" id="HeadTagBundle" />
                                                        <input type="hidden" id="FootTagBundle" />
                                                        <input type="hidden" id="HeadTagPallet" />
                                                        <input type="hidden" id="FootTagPallet" />

                                                        @*<div class="col-md-12">@Localizer["Tag Print SO"]</div>*@
                                                        <div class="col-md-6">

                                                            <div class="card earning-widget">
                                                                <div class="card-header">
                                                                    @*<div class="card-actions">
                                    <a class="" data-action="collapse"><i class="ti-plus"></i></a>
                                </div>*@
                                                                    <h4 class="card-title m-b-0"> @Localizer["Config Tag bundle"]</h4>
                                                                </div>
                                                                <div class="card-body b-t">
                                                                    <div class="row">
                                                                        <div class="col-md-12">

                                                                            @*@Model.modelProductCustomer.NoTagBundle*@
                                                                            <input class="form-check-input" type="radio" name="tag-edit" id="9tag-edit" value="9tag">
                                                                            <label class="form-check-label" for="9tag-edit">@Localizer["9tag"]</label>

                                                                            <input class="form-check-input" type="radio" name="tag-edit" id="6tag-edit" value="6tag">
                                                                            <label class="form-check-label" for="6tag-edit">@Localizer["6tag"]</label>

                                                                            <input class="form-check-input" type="radio" name="tag-edit" id="4tag-edit" value="4tag">
                                                                            <label class="form-check-label" for="4tag-edit">@Localizer["4tag"]</label>

                                                                            &nbsp; &nbsp; &nbsp;<input type="button" value="Reset NoTag" onclick="setTagNull();" class="btn btn-warning" />
                                                                            <div class="card-body">

                                                                                <div id="Divtagbundle-customer-edit" class="row"></div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            @*<button type="button" id="Tag" class="btn waves-effect waves-light btn-secondary">@Localizer["Tagbundle"]</button>*@
                                                            @*<div class="col-md-12"><h4>@Localizer["Tagbundle"]</h4></div>
                        <div class="row">
                        </div>*@
                                                        </div>

                                                        <div class="col-md-6" style="padding:0;">
                                                            @*<button type="button" id="Tag" class="btn waves-effect waves-light btn-secondary">@Localizer["Tagpallet"]</button>*@

                                                            <div class="col-md-12">
                                                                @*<button type="button" id="Tag" class="btn waves-effect waves-light btn-secondary" onclick="openTagPallet();">@Localizer["Tagpallet"]</button>*@

                                                                <div class="card earning-widget" style="background-color:antiquewhite">
                                                                    <div class="card-header" style="background-color:antiquewhite">
                                                                        @*<div class="card-actions">
                                        <a class="" data-action="collapse"><i class="ti-plus"></i></a>
                                    </div>*@
                                                                        <h4 class="card-title m-b-0"> @Localizer["Config Tag pallet"]</h4>
                                                                    </div>
                                                                    <div class="card-body b-t">
                                                                        <div class="row">
                                                                            <div class="col-md-12">
                                                                                <div class="col-md-12 text-right">
                                                                                    &nbsp; &nbsp; &nbsp;<input type="button" value="Reset NoTag" onclick="setTagNullPallet();" class="btn btn-warning" />
                                                                                </div>

                                                                                <div class="card-body">

                                                                                    <div id="Divtagpallet-customer-edit" class="row"></div>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row justify-content-end">
                                                    <div class="form-group">

                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-primary btneditmaintaincustomer" onclick="return UpdateTag()">@Localizer["Save"]</button>
                                                            <button type="button" class="btn btn-default pull-left" data-dismiss="modal" data-backdrop="false">@Localizer["Cancel"]</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>

        const TagPrintItemsBundle = @Html.Raw(Json.Serialize(@Model.TagPrintSO));

        function BindingAddTagEdit(e) {
            $('#MaterialNo-edit').val($(e).attr("data-MaterialNo"));
            $('#FactoryCode-edit').val($(e).attr("data-FactoryCode"));

            $('#PC-edit').val($(e).attr("data-PC"));
            $('#Description-edit').val($(e).attr("data-Description"));

            let saletext = $(e).attr("data-SaleText1") + $(e).attr("data-SaleText2") +
                $(e).attr("data-SaleText3") + $(e).attr("data-SaleText4")

            $('#Saletext-edit').val(saletext);
            $('#CustCode-edit').val($(e).attr("data-CustCode"));
            $('#CustName-edit').val($(e).attr("data-CustName"));
            $('#Flute-edit').val($(e).attr("data-Flute"));
            $('#Board-edit').val($(e).attr("data-Board"));

            if ($(e).attr("data-notagbundle") == "9tag") {
                $('#9tag-edit').prop("checked", true);
            } else if ($(e).attr("data-notagbundle") == "6tag") {
                $('#6tag-edit').prop("checked", true);
            } else if ($(e).attr("data-notagbundle") == "4tag") {
                $('#4tag-edit').prop("checked", true);
            } else {
                $('#9tag-edit').prop("checked", false);
                $('#6tag-edit').prop("checked", false);
                $('#4tag-edit').prop("checked", false);
            }

            AppendTagbundleCheckBox($(e).attr("data-tagbundle").split(','), $(e).attr("data-HeadTagBundle"), $(e).attr("data-FootTagBundle"));
            AppendTagpalletCheckBox($(e).attr("data-tagpallet").split(','), $(e).attr("data-HeadTagPallet"), $(e).attr("data-FootTagPallet"));

            $('#modal-AddTag-edit').modal('show');

        }

        //Tassanai
        function AppendTagbundleCheckBox(arrayofTagBundle, headTagBundle, footTagBundle) {
            debugger;
            var container1 = $('#Divtagbundle-customer-edit');
            //// debugger;
            container1.html("");
            debugger;
            //var TagSoItemBundle = parseInt(TagPrintItemsBundle);
            var i = 0;

            $('<label />', { text: 'No.', 'class': 'text-left col-2 font-weight-bold' }).appendTo(container1);

            $('<label />', { text: 'Column.', 'class': 'text-left col-6 font-weight-bold' }).appendTo(container1);
            $('<label />', { text: 'UOM.', 'class': 'text-left col-4 font-weight-bold' }).appendTo(container1);

            var taghead = headTagBundle;

            let objtagheadvalue = taghead.split(":");
            $('<input />', {
                type: 'number', 'class': 'form-control col-2', id: 'tagheadEditNo', name: 'tag-edit',
                value: objtagheadvalue[0]
            }).appendTo(container1);

            $('<input />', {
                type: 'text', 'class': 'form-control col-10', id: 'tagheadEditColumn', name: 'tag-edit',
                value: objtagheadvalue[1]
            }).appendTo(container1);

            $.each(TagPrintItemsBundle, function (key, bundle_obj) {

                debugger;

                var existTagBundle = arrayofTagBundle.filter(q => { return q.substring(q.indexOf(":") + 1, q.lastIndexOf(":")) == bundle_obj });
                let textboxNoId = "textboxNo-" + bundle_obj;

                let textboxUomId = "textboxUom-" + bundle_obj;

                if (existTagBundle.length > 0) {
                    let tagsplit = existTagBundle[0];
                    let objvalue = tagsplit.split(":");

                    $('<input />', {
                        type: 'number', 'class': 'form-control col-2', id: textboxNoId, name: 'tag-edit',
                        value: objvalue[0]
                    }).appendTo(container1);

                } else {
                    $('<input />', {
                        type: 'number', 'class': 'form-control col-2', id: textboxNoId, name: 'tag-edit',
                        value: ""
                    }).appendTo(container1);
                }
                //$('<label />', { 'for': checkboxId, text: bundle_obj, 'class': 'mycheckbox-label text-left col-6', 'style': 'min-width:100px' }).appendTo(container1);
                $('<label />', { 'for': textboxNoId, text: bundle_obj, 'class': 'mycheckbox-label text-left col-6', 'style': 'min-width:100px' }).appendTo(container1);

                if (existTagBundle.length > 0) {
                    let tagsplit = existTagBundle[0];
                    let objvalue = tagsplit.split(":");

                    $('<input />', {
                        type: 'textbox', 'class': 'form-control col-4', id: textboxUomId, name: 'tag-edit',
                        value: objvalue[2]
                    }).appendTo(container1);

                } else {
                    $('<input />', {
                        type: 'textbox', 'class': 'form-control col-4', id: textboxUomId, name: 'tag-edit',
                        value: ""
                    }).appendTo(container1);
                }

                i++;
            });

            var tagfoot = footTagBundle;

            let objtagfootvalue = tagfoot.split(":");
            $('<input />', {
                type: 'number', 'class': 'form-control col-2', id: 'tagfootEditNo', name: 'tag-edit',
                value: objtagfootvalue[0]
            }).appendTo(container1);

            $('<input />', {
                type: 'text', 'class': 'form-control col-10', id: 'tagfootEditColumn', name: 'tag-edit',
                value: objtagfootvalue[1]
            }).appendTo(container1);

        }

        function AppendTagpalletCheckBox(arrayofTagPallet, headTagPallet, footTagPallet) {
            debugger;
            var container1 = $('#Divtagpallet-customer-edit');
            // debugger;
            container1.html("");

            //var TagSoItemBundle = parseInt(TagPrintItemsBundle);
            var i = 0;

            $('<label />', { text: 'No.', 'class': 'text-left col-2 font-weight-bold' }).appendTo(container1);

            $('<label />', { text: 'Column.', 'class': 'text-left col-6 font-weight-bold' }).appendTo(container1);
            $('<label />', { text: 'UOM.', 'class': 'text-left col-4 font-weight-bold' }).appendTo(container1);

            var tagheadPallet = headTagPallet;
            let objtagheadPalletvalue = tagheadPallet.split(":");
            $('<input />', {
                type: 'number', 'class': 'form-control col-2', id: 'tagheadPalletEditNo', name: 'tagPallet-edit',
                value: objtagheadPalletvalue[0]
            }).appendTo(container1);

            $('<input />', {
                type: 'text', 'class': 'form-control col-10', id: 'tagheadPalletEditColumn', name: 'tagPallet-edit',
                value: objtagheadPalletvalue[1]
            }).appendTo(container1);

            $.each(TagPrintItemsBundle, function (key, pallet_obj) {
                debugger;
                //var existTagPallet = arrayofTagPallet.filter(q => { return q == pallet_obj });
                //var existTagPallet = arrayofTagPallet.filter(q => { return q.substring(0, q.lastIndexOf(":")) == pallet_obj });

                //let checkboxId = "checkbox-pallet-" + pallet_obj.replace(' ', '-');
                //let textboxId = "textbox-pallet-" + pallet_obj.replace(' ', '-');
                ////let textboxId = "textbox-pallet-" + pallet_obj.replace(' ', '-');
                //if (existTagPallet.length > 0) {
                //    $('<input />', { type: 'checkbox', id: checkboxId, value: pallet_obj, 'checked': true }).appendTo(container1);
                //} else {
                //    $('<input />', { type: 'checkbox', id: checkboxId, value: pallet_obj }).appendTo(container1);
                //}
                //$('<label />', { 'for': checkboxId, text: pallet_obj, 'class': 'mycheckbox-label text-left col-6', 'style': 'min-width:100px' }).appendTo(container1);
                //if (existTagPallet.length > 0) {

                //    let starttxt = existTagPallet.toString().lastIndexOf(":");
                //    let endtxt = existTagPallet.toString().length;

                //    $('<input />', {
                //        type: 'textbox', 'class': 'form-control col-6', id: textboxId,
                //        value: existTagPallet.toString().substring(starttxt, endtxt).replace(":", '')
                //    }).appendTo(container1);

                //} else {
                //    $('<input />', { type: 'textbox', 'class': 'form-control col-6', id: textboxId, value: "" }).appendTo(container1);
                //}
                var existTagPallet = arrayofTagPallet.filter(q => { return q.substring(q.indexOf(":") + 1, q.lastIndexOf(":")) == pallet_obj });

                let textboxNoId = "textboxNo-pallet-" + pallet_obj.replace(' ', '-');

                let textboxUomId = "textboxUom-pallet-" + pallet_obj.replace(' ', '-');

                if (existTagPallet.length > 0) {
                    let tagsplit = existTagPallet[0];
                    let objvalue = tagsplit.split(":");

                    $('<input />', {
                        type: 'number', 'class': 'form-control col-2', id: textboxNoId, name: 'tagPallet-edit',
                        value: objvalue[0]
                    }).appendTo(container1);

                } else {
                    $('<input />', {
                        type: 'number', 'class': 'form-control col-2', id: textboxNoId, name: 'tagPallet-edit',
                        value: ""
                    }).appendTo(container1);
                }
                $('<label />', { 'for': textboxNoId, text: pallet_obj, 'class': 'mycheckbox-label text-left col-6', 'style': 'min-width:100px' }).appendTo(container1);
                if (existTagPallet.length > 0) {
                    let tagsplit = existTagPallet[0];
                    let objvalue = tagsplit.split(":");

                    $('<input />', {
                        type: 'textbox', 'class': 'form-control col-4', id: textboxUomId, name: 'tagPallet-edit',
                        value: objvalue[2]
                    }).appendTo(container1);

                } else {
                    $('<input />', { type: 'textbox', 'class': 'form-control col-4', id: textboxUomId, name: 'tagPallet-edit',value: "" }).appendTo(container1);
                }

                i++;
            });

            var tagfootPallet = footTagPallet;

            let objtagfootPalletvalue = tagfootPallet.split(":");
            $('<input />', {
                type: 'number', 'class': 'form-control col-2', id: 'tagfootPalletEditNo', name: 'tagPallet-edit',
                value: objtagfootPalletvalue[0]
            }).appendTo(container1);

            $('<input />', {
                type: 'text', 'class': 'form-control col-10', id: 'tagfootPalletEditColumn', name: 'tagPallet-edit',
                value: objtagfootPalletvalue[1]
            }).appendTo(container1);

        }
        function setTagNull() {
            $('input[name="tag-edit"]').prop('checked', false);
            $('input[name="tag-edit"]').val('');

        }
        function setTagNullPallet() {

            $('input[name="tagPallet-edit"]').val('');

        }

        function UpdateTag() {

           // debugger;
            //tassanai

            var NoTagBundle = "";
            var NumberOfTag = 0
            if ($('#9tag-edit').prop("checked") == true) {
                NoTagBundle = "9tag";
                NumberOfTag = 9;
            }
            if ($('#6tag-edit').prop("checked") == true) {
                NoTagBundle = "6tag";
                NumberOfTag = 6;
            }
            if ($('#4tag-edit').prop("checked") == true) {
                NoTagBundle = "4tag";
                NumberOfTag = 4;
            }

            var TagBundle = "";
            var TagBundleUom = "";
            var i2 = 0;

            var tagheadEditNo = $("#tagheadEditNo").val();
            var tagfootEditNo = $("#tagfootEditNo").val();
            var Adjust1Edit = "";
            var Adjust2Edit = "";

          //  debugger;
            if ($("#tagheadEditNo").length > 0 && tagheadEditNo != 0) {
                Adjust1Edit = $("#tagheadEditNo").val() + ":" + $("#tagheadEditColumn").val() + ",";
                // Adjust1Createuom = $("#Adjust1-Create-uom").val();
            }

            if ($("#tagfootEditNo").length > 0 && tagfootEditNo != 0) {
                Adjust2Edit = $("#tagfootEditNo").val() + ":" + $("#tagfootEditColumn").val() + ",";
                // Adjust1Createuom = $("#Adjust1-Create-uom").val();
            }

            $.each(TagPrintItemsBundle, function (key, Object) {

                let textboxNo = $("#textboxNo-" + Object).val();
                //var a = textboxNo.val();
                //console.log(a);
                if (textboxNo > 0 && textboxNo.length > 0) {
                    textboxNo = $("#textboxNo-" + Object).val();
                    TagBundleUom = $("#textboxUom-" + Object).val();
                    //TagBundle = TagBundle + Object + ",";
                    TagBundle = TagBundle + textboxNo + ":" + Object + ":" + TagBundleUom + ",";
                    i2++;
                }

            });

            if (i2 > 9) {
                //   alert('123');
                swal("Exceed the limit (" + NumberOfTag + " Tag/Page)", { icon: "warning", });
                return false;
            }
            //  swal('จำนวนที่เลือกเกิน Tag', Error);

            //  TagBundle = TagBundle.substring(0, TagBundle.length - 1);

            TagBundle = Adjust1Edit + TagBundle + Adjust2Edit;
            TagBundle = TagBundle.substring(0, TagBundle.length - 1);
            $("#TagBundle").val(TagBundle);
            console.log("TagBundle:" + TagBundle);

            //  debugger;
            var TagPallet = "";
            var TagPalletUom = "";
            var i3 = 0;

            var tagheadPalletEditNo = $("#tagheadPalletEditNo").val();
            var tagfootPalletEditNo = $("#tagfootPalletEditNo").val();
            var Adjust1PalletEdit = "";
            var Adjust2PalletEdit = "";

            if ($("#tagheadPalletEditNo").length > 0 && tagheadPalletEditNo != 0) {
                Adjust1PalletEdit = $("#tagheadPalletEditNo").val() + ":" + $("#tagheadPalletEditColumn").val() + ",";
                // Adjust1Createuom = $("#Adjust1-Create-uom").val();
            }

            if ($("#tagheadPalletEditNo").length > 0 && tagfootPalletEditNo != 0) {
                Adjust2PalletEdit = $("#tagfootPalletEditNo").val() + ":" + $("#tagfootPalletEditColumn").val() + ",";
                // Adjust1Createuom = $("#Adjust1-Create-uom").val();

            }
            $.each(TagPrintItemsBundle, function (key, pObject) {

                //   let textboxNo = "#checkbox-pallet-" + pObject.replace(' ', '-');
                let textboxNo = $("#textboxNo-pallet-" + pObject).val();

                // if ($(chkboxId).prop("checked") == true) {
                if (textboxNo > 0 && textboxNo.length > 0) {
                    textboxNo = $("#textboxNo-pallet-" + pObject).val();
                    TagPalletUom = $("#textboxUom-pallet-" + pObject).val();

                    TagPallet = TagPallet + textboxNo + ":" + pObject + ":" + TagPalletUom + ",";
                    i3++;
                }

            });
            if (i3 > 9) {
                //   alert('123');
                swal("Exceed the limit (9 Tag/Page)", { icon: "warning", });
                return false;
            }
            //  TagPallet = TagPallet.substring(0, TagPallet.length - 1);

            TagPallet = Adjust1PalletEdit + TagPallet + Adjust2PalletEdit;
           // debugger;

            TagPallet = TagPallet.substring(0, TagPallet.length - 1);
            $("#TagPallet").val(TagPallet);

           // debugger;

            if (Adjust1Edit.length > 0) {
                Adjust1Edit = Adjust1Edit.substring(0, Adjust1Edit.length - 1);
            }

            if (Adjust2Edit.length > 0) {
                Adjust2Edit = Adjust2Edit.substring(0, Adjust2Edit.length - 1);
            }

            if (Adjust1PalletEdit.length > 0) {
                Adjust1PalletEdit = Adjust1PalletEdit.substring(0, Adjust1PalletEdit.length - 1);
            }
            if (Adjust2PalletEdit.length > 0) {
                Adjust2PalletEdit = Adjust2PalletEdit.substring(0, Adjust2PalletEdit.length - 1);
            }

            var TagHeadBundle = Adjust1Edit;
            var TagFootBundle = Adjust2Edit;
            var TagHeadPallet = Adjust1PalletEdit;
            var TagFootPallet = Adjust2PalletEdit;

            let formData = {
                //"Id": $("#Id-customer-edit").val(),
                //"SaleOrg": $("#SaleOrg-customer-edit").val(),
                //"PlantCode": $("#PlantCode-customer-edit").val(),
                //"CustName": $("#CustName-customer-edit").val(),
                //"SoldToCode": $("#SoldToCode-customer-edit").val(),
                //"CustCode": $("#CustCode-customer-edit").val(),
                //"CusId": $("#CusId-customer-edit").val(),
                //"IndGrp": $("#IndGrp-customer-edit").val(),
                //"Zone": $("#Zone-customer-edit").val(),
                //"Route": $("#Route-customer-edit").val(),
                //"CustShipTo": $("#CustShipTo-customer-edit").val(),
                //"CustDeliveryTime": $("#CustDeliveryTime-customer-edit").val(),
                //"CustClass": $("#CustClass-customer-edit").val(),
                //"CustReq": $("#CustReq-customer-edit").val(),
                //"CustAlert": $("#CustAlert-customer-edit").val(),
                ////"CustStatus": $("#CustStatus-customer-edit").val(),
                //"CustStatus": checkStatus,
                //"PalletOverhang": $("#PalletOverhang-customer-edit").val(),
                //"CreatedDate": $("#CreatedDate-customer-edit").val(),
                //"CreatedBy": $("#CreatedBy-customer-edit").val(),
                //"CustShipToJsonList": $("#CustShipToJsonList-customer-edit").val(),
                //"QASpec": QASpec,
                //"Accgroup": $("#Accgroup-customer-edit").val(),
                //"Cust": $("#Cust-customer-edit").val(),
                //"PriorityFlag": $("#PriorityFlag-customer-edit").val(),

                "FactoryCode": $("#FactoryCode-edit").val(),
                "MaterialNo": $("#MaterialNo-edit").val(),
                "TagBundle": TagBundle,
                "TagPallet": TagPallet,
                "NoTagBundle": NoTagBundle,
                "HeadTagBundle": TagHeadBundle,
                "FootTagBundle": TagFootBundle,
                "HeadTagPallet": TagHeadPallet,
                "FootTagPallet": TagFootPallet

            };
            debugger;
            var form = JSON.stringify(formData);
            //$("#fromCustomer").submit();
                //var form = $('#formUpdateCustomer').serialize();
                //console.log($("#Id-customer-edit").val())

                $.ajax({
                                    url: '@Url.Action("SaveAddTag", "AddTagCustomer")',
                                    type: "POST",
                                    async: false,
                                    data: { req: form },
                                    dataType: "json",
                                    success: function (data) {
                                        //swal("Update!", { icon: "success", });
                                        debugger;
                                        console.log(data.isSuccess)
                                        if (data.isSuccess) {
                                            $('.modal').modal('hide');
                                            $('.modal-backdrop').hide();
                                            $("body").removeClass("modal-open");
                                            //UpdateCustomerTableNew(data);
                                            swal("Updated Successfully!",
                                                {
                                                    icon: "success",
                                                }
                                            ).then((willDelete) => {
                                                if (willDelete) {
                                                    location.reload();
                                                }
                                            });
                                        }
                                        else
                                        {
                                            swal("Update Failed!",
                                                {
                                                    icon: "warning",
                                                }
                                            ).then((willDelete) => {
                                                if (willDelete) {
                                                    location.reload();
                                                }
                                            });
                                        }

                                    }
                                 });
                            //===

        }
    </script>
}