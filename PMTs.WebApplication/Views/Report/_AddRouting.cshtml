@model IEnumerable<PMTs.DataAccess.ModelView.Report.MasterCardRouting>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@{
    Layout = null;
}

@{
    var jointSeparate = "";
}

<table style="width:fit-content ;height:1060px ;border-top:none;border-bottom:none;border-left:none;" class="tableMO">
    <tbody>
        <tr style="height: 40px; width:initial;">
            <td colspan="3" style="vertical-align: middle;">
                @if (Model.Count() > 0)
                {
                    <div style="margin-left:1px;" class="row">
                        <div class="col-xs-4"></div>
                        <div class="col-xs-4 text-center titleRouting">@Localizer["In"]</div>
                        <div class="col-xs-4 text-center titleRouting">@Localizer["Out"]</div>
                    </div>
                }
            </td>
        </tr>
        <tr>
            <td colspan="3" style="vertical-align: text-top;">
                <div>
                    @foreach (var item in Model)
                    {
                        <div style="margin-left:5px;">
                            <div class="titleRouting" style="width:440px;word-wrap:break-word">@item.Routing.SeqNo. @item.Routing.Machine</div>
                        </div>
                        @if (item.MachineGroup == "1" || item.MachineIsCalPaperWidth)
                        {
                            <div style="margin-left:1px;" class="row">
                                <div class="col-xs-12 labelRouting">@Localizer["Width"]  @item.Routing.PaperWidth &nbsp; @Localizer["Cut"] @item.Routing.CutNo&nbsp; @Localizer["scrap"] @item.Routing.Trim = @String.Format("{0:0.00}", Convert.ToDouble(@item.Routing.PercenTrim))%</div>
                            </div>
                        }
                        <div style="margin-left:1px;" class="row">
                            <div class="col-xs-4" style="word-break: break-word;font-size: 15px;vertical-align: bottom;">
                                @Localizer["Sheet size (WxL)"]
                            </div>
                            <div class="col-xs-4 text-center labelRouting">
                                @item.Routing.SheetInWid x @item.Routing.SheetInLeg
                            </div>
                            <div class="col-xs-4 text-center labelRouting">
                                @item.Routing.SheetOutWid x @item.Routing.SheetOutLeg
                            </div>
                        </div>

                        <div style="margin-left:1px;" class="row">
                            <div class="col-xs-4 labelRouting">
                                @Localizer["Open number"]
                            </div>
                            <div class="col-xs-4 text-center labelRouting">
                                @item.Routing.NoOpenIn
                            </div>
                            <div class="col-xs-4 text-center labelRouting">
                                @item.Routing.NoOpenOut
                            </div>
                        </div>

                        <div style="margin-left:1px;" class="row">
                            <div class="col-xs-4 labelRouting">
                                @Localizer["Weight (kg)"]
                            </div>
                            <div class="col-xs-4 text-center labelRouting">
                                @String.Format("{0:0.000}", @item.Routing.WeightIn)
                            </div>
                            <div class="col-xs-4 text-center labelRouting">
                                @String.Format("{0:0.000}", @item.Routing.WeightOut)
                            </div>
                        </div>

                        <div style="margin-left:1px;" class="row labelRouting">
                            @{
                                var indexOfMylaSize = item.Routing.MachineDetail != null ? item.Routing.MachineDetail.IndexOf("Myla Size") : -1;
                                if (indexOfMylaSize != -1)
                                {
                                    <div id="routingMachine_@item.Routing.MaterialNo@item.Routing.SeqNo" class="col-xs-12 labelRouting" style="word-wrap:break-word;white-space: pre-wrap;font-weight:600">@item.Routing.MachineDetail.Substring(0, indexOfMylaSize)</div>
                                    <div class="col-xs-12 labelRouting" style="font-weight:600">@item.Routing.MachineDetail.Substring(indexOfMylaSize, item.Routing.MachineDetail.Length - indexOfMylaSize)</div>

                                }
                                else
                                {
                                    <div id="routingMachine_@item.Routing.MaterialNo@item.Routing.SeqNo" class="col-xs-12 labelRouting" style="word-wrap:break-word;white-space: pre-wrap;font-weight:600">@item.Routing.MachineDetail</div>

                                }
                            }
                        </div>
                        <div style="margin-left:1px;" class="row labelRouting">
                            <div id="routingColor_@item.Routing.MaterialNo@item.Routing.SeqNo" class="col-xs-12 labelRouting" style="word-wrap:break-word;font-weight:600">@item.Routing.MachineColorDetail</div>
                        </div>

                        @if (item.MachineGroup == "1")
                        {
                            var scoreText = "";
                            <div style="margin-left:1px;float:none" class="row labelRouting">
                                @if (item.Routing.ScoreType != null && item.Routing.ScoreType != "")
                                {
                                    scoreText = "ScoreType : " + item.Routing.ScoreType;
                                    @if (item.Routing.ScoreGap != null && item.Routing.ScoreGap.HasValue)
                                    {
                                        scoreText = scoreText + ", ScoreGap : " + item.Routing.ScoreGap.Value;

                                    }
                                    <div style="white-space:pre-line" class="col-xs-12 labelRouting">@scoreText</div>
                                }
                            </div>
                        }

                        jointSeparate = "";

                        @if (!String.IsNullOrEmpty(item.Routing.JoinMatNo))
                        {
                            jointSeparate = $"Joint To : {item.Routing.JoinMatNo}, ";
                        }
                        @if (!String.IsNullOrEmpty(item.Routing.SeparatMatNo))
                        {
                            jointSeparate = jointSeparate + $"Separate To : {item.Routing.SeparatMatNo}, ";
                        }

                        if (jointSeparate != "")
                        {
                            jointSeparate = jointSeparate.Substring(0, jointSeparate.Length - 2);
                            <div style="margin-left:1px;float:none" class="row">
                                <div style="white-space:pre-wrap" class="col-xs-12 labelRouting">@jointSeparate</div>
                            </div>
                        }

                        @if (item.MachineGroup == "1" && item.Routing.Coatings.Count() > 0)
                        {
                            <div style="margin-left:10px;margin-right:10px;padding-top:10px" class="row">
                                <table class="table table-bordered col-sm-12" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th colspan="3" class="text-center" style="font-size:medium">@Localizer["Coating"]</th>
                                        </tr>
                                        <tr style="color:lightslategray">
                                            <th class="text-center" style="font-size:small" width="20%">@Localizer["Station"]</th>
                                            <th class="text-center" style="font-size:small" width="20%">@Localizer["Type"]</th>
                                            <th class="text-center" style="font-size:small" width="20%">@Localizer["Name"]</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var coating in item.Routing.Coatings)
                                        {
                                            <tr>
                                                <td class="text-center" style="font-size:x-small">@coating.Station</td>
                                                <td class="text-center" style="font-size:x-small">@coating.Type</td>
                                                <td class="text-center" style="font-size:x-small">@coating.Name</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }

                        @if (item.Routing.RepeatLength.HasValue)
                        {
                            if (item.Routing.RepeatLength.Value != 0)
                            {

                                <div style="margin-left:1px;float:none" class="row">
                                    <div class="col-xs-12 labelRouting">@Localizer["RepeatLength"] : @item.Routing.RepeatLength.Value</div>
                                </div>
                            }
                        }

                        @if (item.Routing.Machine.ToLower().Contains("coa"))
                        {
                            if (item.Routing.CustBarcodeNo != null)
                            {
                                <div style="margin-left:1px;float:none" class="row">
                                    <div class="col-xs-12 labelRouting">@Localizer["Barcode"] : @item.Routing.CustBarcodeNo</div>
                                </div>
                            }

                            if (item.Routing.QualitySpecs != null)
                            {
                                <div style="margin-left:1px;float:none" class="row">
                                    <div style="white-space:pre-wrap;word-wrap:break-word; overflow-wrap:break-word;" class="col-xs-12 labelRouting">@Localizer["QA Spec"] : @item.Routing.QualitySpecs</div>
                                </div>
                            }
                        }

                        @if (!String.IsNullOrEmpty(item.Routing.RemarkInprocess))
                        {
                            <div style="margin-left:1px;float:none" class="row">
                                <div style="max-width:440px;white-space:pre-wrap;word-wrap:break-word; overflow-wrap:break-word;" class="col-xs-12 labelRouting">@Localizer["note"] : @item.Routing.RemarkInprocess.ToString()</div>
                            </div>
                        }

                        <div class="row" style="margin:2px">
                            <center>
                                <hr class="col-xs-12 hrStyle" />
                            </center>
                        </div>
                    }
                </div>
            </td>
        </tr>
    </tbody>
</table>