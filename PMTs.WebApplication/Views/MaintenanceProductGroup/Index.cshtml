@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@model PMTs.DataAccess.ModelView.MaintenanceProductGroup.MaintenanceProductGroupViewModel

@{
    ViewData["Title"] = "ProductGroup";
}
<style>
    .form-control-sm {
        min-height: 30px;
    }
</style>
<div class="card">
    <div class="card-body">
        <div class="row box">
            <div class="col-md-6">
                <h3 class="text-themecolor"><i class="mdi mdi-package-variant-closed"></i> @Localizer["ProductGroup"] </h3>
            </div>
            <div class="col-md-6 form-inline" style="flex-flow:row-reverse">
                <div>
                    <button type="button" class="btn waves-effect waves-light btn-info btn-info" id="btnShowCreateModalProductGroup">
                        <span class="btn-label"><i class="fa fa-plus-square text-left"></i> </span>@Localizer["Create"]
                    </button>
                    <partial name="_CreateModal" model="Model" />
                </div>
            </div>
        </div>
        <div class="row justify-content-between">

            <div class="box" id="ProductGroup-table">
                <partial name="_ProductGroupTable" model="Model" />
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        function viewShow(Id, Code, Description) {
            $('#Id').val(Id);
            $('#Code').val(Code);
            $('#Description').val(Description);
            $('#modal-view').modal('show');
        }

        function viewEdit(Id, Code, Description, createdDate, createdBy) {
            $('#EId').val(Id);
            $('#ECode').val(Code);
            $('#EDescription').val(Description);
            $('#ECreatedDate').val(ChangeDateTimeFormat(createdDate));
            $('#ECreatedBy').val(createdBy);
            $('#modal-edit').modal('show');
        }

        function ChangeDateTimeFormat(oDatetime) {
            let datetimeStr = "";

            if (oDatetime != null && oDatetime != "") {
                let datetimeArr = oDatetime.split(' ');
                let dateArr = datetimeArr[0].split('/');
                let timeArr = datetimeArr[1].split(':');
                let year = dateArr[2];
                let month = dateArr[1].length == 1 ? '0' + dateArr[1] : dateArr[1];
                let day = dateArr[0].length == 1 ? '0' + dateArr[0] : dateArr[0];
                let hour = timeArr[0].length == 1 ? '0' + timeArr[0] : timeArr[0];
                let min = timeArr[1].length == 1 ? '0' + timeArr[1] : timeArr[1];
                let sec = timeArr[2].length == 1 ? '0' + timeArr[2] : timeArr[2];
                datetimeStr = year + "-" + month + "-" + day + "T" + hour + ":" + min + ":" + sec;
            }

            return datetimeStr;
        }

        function getData() {
            let req = {
                "Id": $("#EId").val(),
                "Code": $("#ECode").val(),
                "Description": $("#EDescription").val(),
                "CreatedDate": $("#ECreatedDate").val(),
                "CreatedBy": $("#ECreatedBy").val(),
            };
            return req;
        }

        $('#btnSubmitMaintainProductgroup').click(function () {
            DisabledSubmitButton(this);
            if ($("#ProductGroupViewModel_Code").val() === "" || $("#ProductGroupViewModel_Description").val() === "") {
                swal("Please Input Data All Fields!", { icon: "warning", });
            }
            else {
                var form = $('#create-ProductGroup-form').serialize();
                $.ajax({
                    url: '@Url.Action("SaveProductGroup", "MaintenanceProductGroup")',
                    type: "POST",
                    async: false,
                    data: form,
                    dataType: "json",
                    success: function (data) {
                        UpdateProductGroupTableNew(data);
                        swal("Save Success!", { icon: "success", });
                        $('#modal-create').modal('hide');
                        $('.modal-backdrop').hide();
                        $("body").removeClass("modal-open");
                    }
                });
            }
        });

        $('.btneditmaintainproductgroup').click(function () {
            DisabledSubmitButton(this);
            if ($("#ECode").val() === "" || $("#EDescription").val() === "") {
                swal("Please Input Data All Fields!", { icon: "warning", });
            }
            else {
                var form = JSON.stringify(getData());
              //  var form = $('#edit-maintain-productgroup').serialize();
                $.ajax({
                    url: '@Url.Action("UpdateProductGroup", "MaintenanceProductGroup")',
                    type: "POST",
                    async: false,
                    data:
                    {
                        req: form.toString()
                    },
                    dataType: "json",
                    success: function (data) {
                        UpdateProductGroupTableNew(data);
                        swal("Update Success!", { icon: "success", });
                        $('#modal-edit').modal('hide');
                        $('.modal-backdrop').hide();
                        $("body").removeClass("modal-open");
                    }
                });
            }
       });

        function UpdateProductGroupTableNew(res) {
            $('#ProductGroup-table').html(res.View);
            $('#ProductGroup-data-table').DataTable();
            $('.form-group').css('display', 'block');
            $('body').css('padding', '0px');
            $('.form-inline').css('width', '-webkit-fill-available');
            $('.form-control').css('width', '-webkit-fill-available');
        }

        $(function () {
            $('.form-group').css('display', 'block');
            $('.form-inline').css('width', '100%');
            $('.form-control').css('width', '100%');
            $('input[type=search]').css('width', 'auto');

            $('#ProductGroup-data-table').DataTable();
        });

        $('#btnShowCreateModalProductGroup').click(function () {
           // $(".field-validation-error span").hide();
            $('#modal-create').modal('show');
        });

        $('#btnSubmit').click(function () {
            DisabledSubmitButton(this);
            $('.add-row').remove();
        });

        function DisabledSubmitButton(item) {
            item.disabled = true;

            setTimeout(function () {
                item.disabled = false;
            }, 2000);
        }

        @*function UpdateProductGroupTable() {
            $.ajax({
                url: '@Url.Action("UpdateProductGroupTable", "MaintenanceProductGroup")',
                success: function (res) {
                    $('#ProductGroup-table').html(res);
                    $('#ProductGroup-data-table').DataTable();
                    $('.form-group').css('display', 'block');
                    $('.form-inline').css('width', '-webkit-fill-available');
                    $('.form-control').css('width', '-webkit-fill-available');
                },
                error: function () {  }
            });
        }

        function ConfirmDelete(Id) {
            swal({
                title: "Are you sure?",
                text: "This data will not be visible if you press OK.",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
                .then((willDelete) => {
                    if (willDelete) {
                            $.ajax({
                        type: 'PUT',
                        url: '@Url.Action("DeleteProductGroup", "MaintenanceProductGroup")',
                        data: { Id: Id },
                        success: function (res) {
                            if (res.IsSuccess) {
                                $('.modal').modal('hide');
                                swal("Deleted!", {
                                    icon: "success",
                                });
                                UpdateProductGroupTable();
                                window.location.reload(true);
                            }
                        }
                    });
                    } else {
                    }
                });
        }

        var onSaveSuccess = function (res) {
            if (res.IsSuccess) {
                $('.modal').modal('hide');
                swal("Success!", {
                    icon: "success",
                });
               // modalDialog(success, SaveSuccess);
               //UpdateProductGroupTable();
                UpdateProductGroupTableNew(res);
            }
            else {
              //  modalDialog(error, SaveFailed);
                swal("Faile!", {
                    icon: "success",
                });
            }
        };

        var onUpdateSuccess = function (res) {
            if (res.IsSuccess) {

               // modalDialog(success, UpdateSuccess);
                swal("Success!", {
                    icon: "success",
                });
                UpdateProductGroupTableNew(res);
                $('.modal').modal('hide');
                $('.modal-backdrop').hide();
                $("body").removeClass("modal-open");
              //  UpdateProductGroupTable();
                //$('#modal-edit').modal('hide');
                //$('#modal-edit').removeClass('modal fade in');
            }
            else {
                swal("Faile!", {
                    icon: "success",
                });
              //  modalDialog(error, UpdateFailed);
            }
        };

        var onUpdateStatusSuccess = function(res) {
            if (res.IsSuccess) {

              //  modalDialog(success, UpdateSuccess);
                swal("Success!", {
                    icon: "success",
                });
                UpdateProductGroupTableNew(res);
                $('.modal').modal('hide');
                //UpdateProductGroupTable();
                //$('#modal-edit').modal('hide');
                //$('#modal-edit').removeClass('modal fade in');
            }
            else {
               // modalDialog(error, UpdateFailed);
                swal("Faile!", {
                    icon: "success",
                });
            }
        };*@
    </script>

}