<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alternative 1" xml:space="preserve">
    <value>Alternative 1</value>
    <comment>/</comment>
  </data>
  <data name="Alternative 2" xml:space="preserve">
    <value>Alternative 2</value>
    <comment>/</comment>
  </data>
  <data name="Alternative 3" xml:space="preserve">
    <value>Alternative 3</value>
    <comment>/</comment>
  </data>
  <data name="Alternative 4" xml:space="preserve">
    <value>Alternative 4</value>
    <comment>/</comment>
  </data>
  <data name="Alternative 5" xml:space="preserve">
    <value>Alternative 5</value>
    <comment>/</comment>
  </data>
  <data name="Alternative 6" xml:space="preserve">
    <value>Alternative 6</value>
    <comment>/</comment>
  </data>
  <data name="Alternative 7" xml:space="preserve">
    <value>Alternative 7</value>
    <comment>/</comment>
  </data>
  <data name="Alternative 8" xml:space="preserve">
    <value>Alternative 8</value>
    <comment>/</comment>
  </data>
  <data name="Bt-Add" xml:space="preserve">
    <value>Add Machine</value>
  </data>
  <data name="Bt-Insert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="Bt-Update" xml:space="preserve">
    <value>Update Machine</value>
  </data>
  <data name="Choose here" xml:space="preserve">
    <value>--- Choose here ---</value>
    <comment>/</comment>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Cor properties 1" xml:space="preserve">
    <value>Paper roll width</value>
    <comment>/</comment>
  </data>
  <data name="Cor properties 2" xml:space="preserve">
    <value>Cut</value>
    <comment>/</comment>
  </data>
  <data name="Cor properties 3" xml:space="preserve">
    <value>Trim</value>
    <comment>/</comment>
  </data>
  <data name="Cor properties 4" xml:space="preserve">
    <value>% Trim</value>
    <comment>/</comment>
  </data>
  <data name="Cor properties 5" xml:space="preserve">
    <value>Tear tape</value>
    <comment>/</comment>
  </data>
  <data name="Cor properties 6" xml:space="preserve">
    <value>จำนวนเส้น/กล่อง</value>
    <comment>/</comment>
  </data>
  <data name="Cor properties 7" xml:space="preserve">
    <value>ระบุระยะจากขอบกระดาษ</value>
    <comment>/</comment>
  </data>
  <data name="Corrugator properties" xml:space="preserve">
    <value>Corrugator properties</value>
    <comment>/</comment>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Group Machine" xml:space="preserve">
    <value>Group Machine</value>
    <comment>/</comment>
  </data>
  <data name="In/Out properties" xml:space="preserve">
    <value>In/Out properties</value>
    <comment>/</comment>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Insert</value>
    <comment>/</comment>
  </data>
  <data name="IO prop1" xml:space="preserve">
    <value>No. Open</value>
    <comment>/</comment>
  </data>
  <data name="IO prop2" xml:space="preserve">
    <value>Weight</value>
    <comment>/</comment>
  </data>
  <data name="IO prop3" xml:space="preserve">
    <value>W </value>
    <comment>/old = Sheet width (mm)</comment>
  </data>
  <data name="IO prop4" xml:space="preserve">
    <value>L </value>
    <comment>/old = Sheet length (mm)</comment>
  </data>
  <data name="IO prop5" xml:space="preserve">
    <value>Coating</value>
  </data>
  <data name="IO prop6" xml:space="preserve">
    <value>Join to/ Separate to</value>
  </data>
  <data name="IO prop7" xml:space="preserve">
    <value>Join to material No.</value>
    <comment>/</comment>
  </data>
  <data name="IO prop8" xml:space="preserve">
    <value>Separate to material No.</value>
  </data>
  <data name="IO Title1" xml:space="preserve">
    <value>Properties</value>
    <comment>/</comment>
  </data>
  <data name="IO Title2" xml:space="preserve">
    <value>In</value>
    <comment>/</comment>
  </data>
  <data name="IO Title3" xml:space="preserve">
    <value>Out</value>
    <comment>/</comment>
  </data>
  <data name="Machine" xml:space="preserve">
    <value>Machine</value>
    <comment>/</comment>
  </data>
  <data name="Machine Move" xml:space="preserve">
    <value>Machine Move</value>
    <comment>/</comment>
  </data>
  <data name="Material No" xml:space="preserve">
    <value>Material No</value>
    <comment>/</comment>
  </data>
  <data name="More Alternative" xml:space="preserve">
    <value>More Alternative</value>
    <comment>/</comment>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
    <comment>/</comment>
  </data>
  <data name="New Product" xml:space="preserve">
    <value>New Product &gt; 6.Routing</value>
    <comment>/</comment>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Printing prop" xml:space="preserve">
    <value>More Color</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop1" xml:space="preserve">
    <value>Color 1</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop10" xml:space="preserve">
    <value>Myla No.</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop11" xml:space="preserve">
    <value>Printing Plate type</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop11.1" xml:space="preserve">
    <value>Non-Print</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop11.2" xml:space="preserve">
    <value>Standard</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop11.3" xml:space="preserve">
    <value>Semi</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop11.4" xml:space="preserve">
    <value>Shipping Mark</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop2" xml:space="preserve">
    <value>Color 2</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop3" xml:space="preserve">
    <value>Color 3</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop4" xml:space="preserve">
    <value>Color 4</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop5" xml:space="preserve">
    <value>Color 5</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop6" xml:space="preserve">
    <value>Color 6</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop7" xml:space="preserve">
    <value>Color 7</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop8" xml:space="preserve">
    <value>Printing plate No.</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop9" xml:space="preserve">
    <value>Cutting die No. </value>
    <comment>/</comment>
  </data>
  <data name="Printing properties" xml:space="preserve">
    <value>Printing properties</value>
    <comment>/</comment>
  </data>
  <data name="Properties printing" xml:space="preserve">
    <value>Properties</value>
    <comment>/</comment>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>Remark</value>
    <comment>/</comment>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Machine</value>
    <comment>/</comment>
  </data>
  <data name="Title Printing prop1" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="Title Printing prop2" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="Title Printing prop3" xml:space="preserve">
    <value>Shade</value>
  </data>
  <data name="Title Printing prop4" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="Title Printing prop5" xml:space="preserve">
    <value>Properties</value>
    <comment>/</comment>
  </data>
  <data name="Title Printing prop6" xml:space="preserve">
    <value>Color</value>
    <comment>/</comment>
  </data>
  <data name="Title Printing prop7" xml:space="preserve">
    <value>Shade</value>
    <comment>/</comment>
  </data>
  <data name="Title Printing prop8" xml:space="preserve">
    <value>Area</value>
    <comment>/</comment>
  </data>
  <data name="value printing" xml:space="preserve">
    <value>Value</value>
    <comment>/</comment>
  </data>
  <data name="test" xml:space="preserve">
    <value>test</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
    <comment>/</comment>
  </data>
  <data name="Customer Barcode Number" xml:space="preserve">
    <value>Customer Barcode Number</value>
    <comment>/</comment>
  </data>
  <data name="Die Cut properties" xml:space="preserve">
    <value>Die Cut properties</value>
    <comment>/</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
    <comment>/</comment>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
    <comment>/</comment>
  </data>
  <data name="Insert Before" xml:space="preserve">
    <value>Insert Before</value>
  </data>
  <data name="JoinTo" xml:space="preserve">
    <value>Join to/ Separate to</value>
    <comment>/</comment>
  </data>
  <data name="Meter" xml:space="preserve">
    <value>meter/hr.</value>
    <comment>/</comment>
  </data>
  <data name="mins" xml:space="preserve">
    <value>mins</value>
    <comment>/</comment>
  </data>
  <data name="MylaSize" xml:space="preserve">
    <value>MylaSize.</value>
    <comment>/</comment>
  </data>
  <data name="No Rotate" xml:space="preserve">
    <value>No Rotate</value>
    <comment>/</comment>
  </data>
  <data name="Pan" xml:space="preserve">
    <value>แผ่น</value>
    <comment>/</comment>
  </data>
  <data name="pcs" xml:space="preserve">
    <value>pcs</value>
    <comment>/</comment>
  </data>
  <data name="Post Time" xml:space="preserve">
    <value>Post Time</value>
    <comment>/</comment>
  </data>
  <data name="Prepare Time" xml:space="preserve">
    <value>Prepare Time</value>
    <comment>/</comment>
  </data>
  <data name="Repeat Lenght" xml:space="preserve">
    <value>Repeat Lenght</value>
    <comment>/</comment>
  </data>
  <data name="RequiAutocomplete" xml:space="preserve">
    <value>The Machine field is required.</value>
    <comment>/</comment>
  </data>
  <data name="requiblock" xml:space="preserve">
    <value>*กดกรณี Block มากกว่า 1</value>
    <comment>/</comment>
  </data>
  <data name="RequiNoOpenin" xml:space="preserve">
    <value>The No Open Out field is required.</value>
    <comment>/</comment>
  </data>
  <data name="requiplate" xml:space="preserve">
    <value>*กดกรณี Plate มากกว่า 1</value>
    <comment>/</comment>
  </data>
  <data name="Rotation In" xml:space="preserve">
    <value>Rotation In</value>
    <comment>/</comment>
  </data>
  <data name="Rotation out" xml:space="preserve">
    <value>Rotation out</value>
    <comment>/</comment>
  </data>
  <data name="Run speed" xml:space="preserve">
    <value>Run speed</value>
    <comment>/</comment>
  </data>
  <data name="Run Waste" xml:space="preserve">
    <value>Run Waste</value>
    <comment>/</comment>
  </data>
  <data name="Score Gap" xml:space="preserve">
    <value>Score Gap</value>
    <comment>/</comment>
  </data>
  <data name="Score Type" xml:space="preserve">
    <value>Score Type</value>
    <comment>/</comment>
  </data>
  <data name="SeparateTo" xml:space="preserve">
    <value>Separate to material No.</value>
    <comment>/</comment>
  </data>
  <data name="Setup Time" xml:space="preserve">
    <value>Setup Time</value>
    <comment>/</comment>
  </data>
  <data name="Setup Waste" xml:space="preserve">
    <value>Setup Waste</value>
    <comment>/</comment>
  </data>
  <data name="Spacial stacking Properties" xml:space="preserve">
    <value>Spacial stacking Properties</value>
    <comment>/</comment>
  </data>
  <data name="Special Properties" xml:space="preserve">
    <value>Special Properties</value>
    <comment>/</comment>
  </data>
  <data name="Special setup Properties" xml:space="preserve">
    <value>Special setup Properties</value>
    <comment>/</comment>
  </data>
  <data name="Printing prop71" xml:space="preserve">
    <value>Color 8</value>
    <comment>/</comment>
  </data>
</root>