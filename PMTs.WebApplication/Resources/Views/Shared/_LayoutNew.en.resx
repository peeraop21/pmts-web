<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Duplicated description" xml:space="preserve">
    <value>Duplicated description!!</value>
    <comment>Alert massege [ProdInfo]</comment>
  </data>
  <data name="Duplicated PlantView" xml:space="preserve">
    <value>Duplicated PlantView!!</value>
    <comment>Alert massege  [ProdERP]</comment>
  </data>
  <data name="Duplicated product code" xml:space="preserve">
    <value>Duplicated product code!!</value>
    <comment>Alert massege [ProdInfo]</comment>
  </data>
  <data name="Save Success" xml:space="preserve">
    <value>Save Success!!</value>
    <comment>Alert massege  [ProdERP]</comment>
  </data>
  <data name="Amount Of Slot Alert" xml:space="preserve">
    <value>Please fill amount of Slot.</value>
    <comment>Alert massege [ProdSpec]</comment>
  </data>
  <data name="Cost per Ton Alert" xml:space="preserve">
    <value>Please fill Cost per Ton before Save.</value>
    <comment>Alert massege [ProdSpec]</comment>
  </data>
  <data name="Duplicated Board Alternative" xml:space="preserve">
    <value>Board Alternative ไม่สามารถซ้ำกับ Board หลักที่เลือกได้</value>
    <comment>Alert massege [ProdSpec]</comment>
  </data>
  <data name="Duplicated-Priority or Bord" xml:space="preserve">
    <value>พบรหัส Priority หรือ Board นี้อยู่ใน List แล้ว ไม่สามารถใส่ข้อมูลซ้ำได้ หากต้องการแก้ไขกรุณา Remove ของเดิมออกก่อน</value>
    <comment>Alert massege [ProdSpec]</comment>
  </data>
  <data name="FGArea" xml:space="preserve">
    <value>Please fill Finished Goods Area.</value>
    <comment>Alert massege [ProdSpec]</comment>
  </data>
  <data name="No Slot" xml:space="preserve">
    <value>จำนวนร่องฟันต้องน้อยกว่าด้านยาว (L)</value>
    <comment>Alert massege [ProdSpec]</comment>
  </data>
  <data name="OKButton" xml:space="preserve">
    <value>Please press OK button.</value>
    <comment>Alert massege </comment>
  </data>
  <data name="Please Select Item" xml:space="preserve">
    <value>Please Select Item</value>
  </data>
  <data name="Please Select One Only" xml:space="preserve">
    <value>Please Select One Only</value>
  </data>
  <data name="Press OK button Alert" xml:space="preserve">
    <value>Please press OK button before Save.</value>
    <comment>Alert massege [ProdSpec]</comment>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Please specify the priority.</value>
    <comment>Alert massege [ProdSpec]</comment>
  </data>
  <data name="Save Failed" xml:space="preserve">
    <value>Save Failed!!</value>
  </data>
  <data name="Search fail" xml:space="preserve">
    <value>Cant find Data</value>
  </data>
  <data name="Update Failed" xml:space="preserve">
    <value>Update Failed!!</value>
  </data>
  <data name="Update Success" xml:space="preserve">
    <value>Update Success!!</value>
  </data>
  <data name="WHRoutingAlert" xml:space="preserve">
    <value>Cant find W/H</value>
    <comment>Alert massege [ProdRouting]</comment>
  </data>
  <data name="Titel Message Default" xml:space="preserve">
    <value>defaultEn</value>
  </data>
  <data name="Titel Message Error" xml:space="preserve">
    <value>errorEn</value>
  </data>
  <data name="Titel Message Success" xml:space="preserve">
    <value>successEn</value>
  </data>
  <data name="Titel Message Warning" xml:space="preserve">
    <value>warningEn</value>
  </data>
</root>